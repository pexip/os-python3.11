Index: os-python3.11/Lib/test/test_hashlib.py
===================================================================
--- os-python3.11.orig/Lib/test/test_hashlib.py
+++ os-python3.11/Lib/test/test_hashlib.py
@@ -150,7 +150,8 @@ class HashLibTestCase(unittest.TestCase)
         if _hashlib:
             # These two algorithms should always be present when this module
             # is compiled.  If not, something was compiled wrong.
-            self.assertTrue(hasattr(_hashlib, 'openssl_md5'))
+            # Pexip: We remove the openssl md5 implementation
+            # self.assertTrue(hasattr(_hashlib, 'openssl_md5'))
             self.assertTrue(hasattr(_hashlib, 'openssl_sha1'))
             for algorithm, constructors in self.constructors_to_test.items():
                 constructor = getattr(_hashlib, 'openssl_'+algorithm, None)
Index: os-python3.11/Modules/_hashopenssl.c
===================================================================
--- os-python3.11.orig/Modules/_hashopenssl.c
+++ os-python3.11/Modules/_hashopenssl.c
@@ -93,7 +93,6 @@ typedef struct {
     PY_EVP_MD *evp_nosecurity;
 } py_hashentry_t;
 
-#define Py_hash_md5 "md5"
 #define Py_hash_sha1 "sha1"
 #define Py_hash_sha224 "sha224"
 #define Py_hash_sha256 "sha256"
@@ -114,8 +113,6 @@ typedef struct {
     {py_name, py_alias, ossl_name, ossl_nid, 0, NULL, NULL}
 
 static const py_hashentry_t py_hashes[] = {
-    /* md5 */
-    PY_HASH_ENTRY(Py_hash_md5, "MD5", SN_md5, NID_md5),
     /* sha1 */
     PY_HASH_ENTRY(Py_hash_sha1, "SHA1", SN_sha1, NID_sha1),
     /* sha2 family */
@@ -967,26 +964,6 @@ EVP_new_impl(PyObject *module, PyObject
 
 
 /*[clinic input]
-_hashlib.openssl_md5
-
-    string as data_obj: object(py_default="b''") = NULL
-    *
-    usedforsecurity: bool = True
-
-Returns a md5 hash object; optionally initialized with a string
-
-[clinic start generated code]*/
-
-static PyObject *
-_hashlib_openssl_md5_impl(PyObject *module, PyObject *data_obj,
-                          int usedforsecurity)
-/*[clinic end generated code: output=87b0186440a44f8c input=990e36d5e689b16e]*/
-{
-    return py_evp_fromname(module, Py_hash_md5, data_obj, 0);
-}
-
-
-/*[clinic input]
 _hashlib.openssl_sha1
 
     string as data_obj: object(py_default="b''") = NULL
@@ -2061,7 +2038,6 @@ static struct PyMethodDef EVP_functions[
     _HASHLIB_COMPARE_DIGEST_METHODDEF
     _HASHLIB_HMAC_SINGLESHOT_METHODDEF
     _HASHLIB_HMAC_NEW_METHODDEF
-    _HASHLIB_OPENSSL_MD5_METHODDEF
     _HASHLIB_OPENSSL_SHA1_METHODDEF
     _HASHLIB_OPENSSL_SHA224_METHODDEF
     _HASHLIB_OPENSSL_SHA256_METHODDEF
